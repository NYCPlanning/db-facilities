name: Build

on:
  push:
    paths-ignore:
      - "*.md"
      - ".pre-commit-config.yml"
      - ".gitignore"
      - "docs/*"
  workflow_dispatch:

jobs:
  Build:
    if: >-
      github.event_name == 'workflow_dispatch' ||
      (
        github.event_name == 'push' &&
        ! contains(github.event.head_commit.message, '[skip]')
      )
    name: Building ...
    runs-on: ubuntu-20.04
    env:
      AWS_S3_ENDPOINT: ${{ secrets.DO_S3_ENDPOINT }}
      AWS_ACCESS_KEY_ID: ${{ secrets.DO_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.DO_SECRET_ACCESS_KEY }}
    steps:
        - uses: actions/checkout@v2

        - name: Install Minio Client
          run: |
            curl -O https://dl.min.io/client/mc/release/linux-amd64/mc
            chmod +x mc
            sudo mv ./mc /usr/bin
            mc alias set spaces $AWS_S3_ENDPOINT $AWS_ACCESS_KEY_ID $AWS_SECRET_ACCESS_KEY --api S3v4

        - name: Initialize
          run: ./facdb.sh init

        - name: Cache Large Files (PLUTO & Building Footprints)
          uses: actions/cache@v2
          id: dataloading
          with:
            path: .library
            key: dataloading-${{ hashFiles('facdb/bash/dataloading.sh') }}

        - name: Dataloading
          run: ./facdb.sh dataloading

        - name: Check on Services
          run: docker-compose ps

        - name: Run Pipelines
          run: ./facdb.sh run --all

        - name: Build facdb
          run: ./facdb.sh build

        - name: QAQC facdb
          run: ./facdb.sh qaqc

        - name: Export facdb
          run: ./facdb.sh export

        - name: Upload Artifacts
          run: ./facdb.sh upload

